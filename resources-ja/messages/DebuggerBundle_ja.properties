evaluation.error.empty.code.fragment=コード フラグメントが必要です
evaluation.error.cannot.evaluate.tostring={0}.toString() を評価できません
evaluation.error.unsupported.expression.type=サポートされない式タイプ
internal.error.locations.of.line=''{0}'' からのデバッグ情報の読み込み時の内部エラー  ブレークポイントはこのクラスでは利用できません
evaluation.error.inconsistent.debug.info=デバッグ情報が矛盾しています
evaluation.error.boolean.value.expected.in.condition='boolean' 値が条件内に必要です
evaluation.error.boolean.condition.expected=''boolean'' 値が条件内に必要です
evaluation.error.process.exited=評価できません \: プロセスは終了しました
evaluation.error.stack.frame.unavailable=スタックフレームは利用できません
evaluation.error.nested.evaluation=他のメソッドの評価中での評価はサポートされていません
evaluation.error.sources.out.of.sync=ソースは実行されるコードに対応していません
evaluation.error.cannot.find.stackframe.source=現在のスタック フレームのソース クラスがありません
evaluation.error.object.collected=オブジェクトが収集されました
evaluation.error.thread.collected=Thread has been collected
evaluation.error.array.collected=配列が収集されました
evaluation.error.thread.resumed=スレッドが再開されました
evaluation.error.debug.info.unavailable=デバッグ情報は利用できません
evaluation.error.invalid.expression=無効な式 \: {0}
evaluation.error.unknown.expression.type=式のタイプが不明です \: {0}
evaluation.error.unknown.expression.operand=Expression operand unknown\: {0}
evaluation.error.type.mismatch=タイプの不一致
evaluation.error.class.not.loaded=クラス ''{0}'' は読み込まれていません
evaluation.error.thread.not.at.breakpoint=評価できません \: スレッドはブレークポイントで一時停止しません
evaluation.error.method.exception=メソッドは ''{0}'' 例外をスローしました。
evaluation.error.surrounded.expression.null=囲まれた式は NULL です
title.customize.data.views=データ ビューのカスタマイズ
title.evaluating=評価...
error.modification.watchpoints.not.supported=ターゲット VM はウォッチポイントの変更をサポートしません
error.native.method.exception=フレームを通したまたは含むフレームはネイティブではありません
action.remove.watch.text={0,choice, 1\#Remove Watch|2\#Remove Watches}
progress.evaluating={0} を評価しています
action.resume.thread.text.resume=再開
action.resume.thread.text.unfreeze=フリーズしない
action.interrupt.thread.text=Interrupt
title.set.value=値の設定
warning.recalculate=値は再計算されます
progress.set.value=設定値...
action.add.field.watchpoint.text=フィールドのウォッチポイントを追加
status.process.started=プロセスは開始しました
status.process.terminated=プロセスは中止しました
status.disconnected=ターゲット VM から切断しました。アドレス \: ''{0}、トランスポート \: ''{1}''
status.stopped.at.cursor=カーソルで停止しました
status.line.breakpoint.reached=ブレークポイント {0} に達しました。行 {1,number}
status.line.breakpoint.reached.full.trace=Breakpoint reached at {0}
export.threads.stackframe.format=at {0}({1}\:{2,number,\#})
status.generic.breakpoint.reached=ブレークポイントに達しました
status.method.entry.breakpoint.reached=メソッド ''{0}'' に入りました
status.method.exit.breakpoint.reached=メソッド ブレークポイントに達しました。 メソッド ''{0}'' が終了します
status.exception.breakpoint.reached=例外ブレークポイントに達しました
status.exception.breakpoint.reached.details=スレッド ''{1}'' 内の例外  ''{0}''
status.field.watchpoint.reached=フィールドのウォッチポイントに達しました
status.field.watchpoint.reached.access='{'{0}@{2}'}'.{1} にアクセスします
status.static.field.watchpoint.reached.access={0}.{1} にアクセスします
status.field.watchpoint.reached.modification='{'{0}@{4}'}'.{1} を変更します。 現在の値 \= ''{2}''。 新しい値 \= ''{3}''
status.static.field.watchpoint.reached.modification={0}.{1} を変更します。 現在の値 \= ''{2}''。 新しい値 \= ''{3}''
status.connected=ターゲット VM に接続しました
status.connect.failed=''{1}'' トランスポートを使用する ''{0}'' でのターゲット VM への接続を確立できませんでした。
error.debugger.already.listening=デバッガは既に監視しています
transport.name.shared.memory=共有メモリ
transport.name.socket=ソケット
error.debug.connector.not.found=トランスポート ''{0}'' を使用して接続できません \: 必要な接続がありません。 JDK インストールを確認してください。
error.no.debug.listen.port=リスナが監視するポートが指定されていません
error.no.debug.attach.port=アタッチするポートが指定されていません
error.no.shmem.address=共有メモリ アドレスが指定されていません
debugger.jdi.bootstrap.error={0}。 JDK インストールを確認してください。
warning.jdk140.unstable=デバッグする VM バージョンは "1.4.0" です。\nJ2SDK 1.4.0 の既知のバグはデバッガの動作を不安定にします。\nJ2SDK 1.4.0_01 またはそれ以上のバージョンを推奨します。
title.jdk140.unstable=VM バージョンの警告
error.invalid.argument={0,choice, 1\#Invalid argument|2\#Invalid arguments}
error.vm.disconnected=VM は切断しました。 ターゲット仮想マシンは接続を閉じました
error.unknown.host=リモート プロセスに接続できません。ホストが不明です
error.cannot.open.debugger.port=デバッガのポートを開けません
error.exception.while.connecting=リモート プロセスへの接続エラー。\n例外が発生しました \: {0}\n例外メッセージ \: {1}
status.waiting.attach=デバッガはアプリケーションの開始を待機しています。デバッグ アドレス \: ''{0}''、トランスポート \: ''{1}''
status.listening=''{1}'' トランスポートを使用する ''{0}'' での接続を監視しています
status.connecting=''{1}'' トランスポートを使用する ''{0}'' で接続しています
status.app.running=アプリケーションが実行中です
status.debug.stopped=デバッグは停止しました
status.waiting.evaluation.result=最後のデバッガ コマンドが終了するまで待機しています
status.step.out=ステップ アウト
status.step.into=ステップ イン
status.step.over=ステップ オーバー
status.run.to.cursor=カーソル位置まで実行
status.process.resumed=プロセスを再開
error.pop.bottom.stackframe=ボトム フレームをポップできません
error.pop.stackframe=An error occurred while popping stack frame\: {0}
error.class.not.loaded=クラスが読み込まれていません \: {0}
string.file.line.position={0} でのクラス \:{1}
string.null.context=NULL コンテキスト
evaluation.error.array.reference.expected=配列参照が必要
evaluation.error.invalid.index.expression=無効なインデックスの式
evaluation.error.not.rvalue=代入式の右辺が値ではありません
evaluation.error.not.lvalue=代入式の左辺が値ではありません
evaluation.error.incompatible.types=''{0}'' 演算に非互換の型です
evaluation.error.lebeled.loops.not.found=ラベル ''{0}'' でループ文がラベルされていません
evaluation.error.reference.type.expected=参照タイプが必要です
evaluation.error.variable.not.declared=変数 ''{0}'' が宣言されていません
evaluation.error.variable.already.declared=変数 ''{0}'' は既に宣言されています
evaluation.error.operation.not.supported=操作 ''{0}'' はサポートされていません
evaluation.error.statement.not.supported=ステートメント ''{0}'' はサポートされていません
evaluation.error.incompatible.variable.initializer.type=''{0}'' の初期化子は非互換の型です
evaluation.error.local.variable.missing.from.class.closure=ローカル変数 ''{0}'' はクラス クロージャにありません
evaluation.error.local.variable.missing=ローカル変数 ''{0}'' がありません
evaluation.error.cannot.resolve.field.class=フィールド ''{0}'' を格納するクラスを解決できません
evaluation.error.cannot.sources.for.field.class=フィールド ''{0}'' を格納するクラスのリソースがありません
evaluation.error.identifier.expected=''{0}'' の代わりの識別子が必要です
evaluation.error.qualifier.type.unknown=''{0}'' のタイプが不明です
evaluation.error.cannot.evaluate.qualifier=限定子 ''{0}'' を評価できません
evaluation.error.method.not.found=メソッド ''{0}'' がありません
evaluation.error.cannot.resolve.class=クラス ''{0}'' を解決できません
evaluation.error.invalid.array.dimension.expression=配列次元の無効な式 \: {0}
evaluation.error.multi.dimensional.arrays.creation.not.supported=多次元配列の作成はサポートされていません
evaluation.error.anonymous.class.evaluation.not.supported=匿名クラスの評価はサポートされていません
evaluation.error.no.static.field=そのような静的フィールドはありません \: ''{0}''
evaluation.error.no.instance.field=そのようなインスタンス フィールドはありません \: ''{0}''
evaluation.error.class.or.array.expected=クラスまたは配列タイプは、フィールド ''{0}'' の評価に必要です。
evaluation.error.evaluating.field=フィールドの評価エラー \: ''{0}''
evaluation.error.evaluating.method=メソッドの評価エラー \: ''{0}''
evaluation.error.object.reference.expected=オブジェクト参照が必要です
evaluation.error.no.stackframe=評価できません \: スタックフレームは利用できません
evaluation.error.no.static.method=そのような静的メソッドはありません \: ''{0}''
evaluation.error.no.instance.method=そのようなインスタンス メソッドはありません \: ''{0}''
evaluation.error.array.type.expected=配列タイプが必要です
evaluation.error.array.dimention.numeric.value.expected=配列次元として数値が必要です
evaluation.error.cannot.evaluate.array.initializer=配列初期化子を評価できません
evaluation.error.incompatible.array.initializer.type=初期化子の型は、配列コンポーネント タイプと代入互換がありません
evaluation.error.invalid.array.size=無効な配列サイズ
evaluation.error.cannot.initialize.array=配列を初期化できません
evaluation.error.cannot.evaluate.class.type=クラス タイプを評価できません
evaluation.error.cannot.resolve.constructor=コンストラクタ ''{0}'' を解決できません
evaluation.error.this.not.avalilable='this' は利用できません
evaluation.error.cannot.cast.null=NULL を ''{0}'' にキャストできません
evaluation.error.cannot.cast.numeric=numeric 値を ''{0}'' にキャストできません
evaluation.error.cannot.cast.boolean=boolean 値を ''{0}'' にキャストできません
evaluation.error.cannot.cast.char=char 値を ''{0}'' にキャストできません
evaluation.error.numeric.expected=Numeric 値が必要です
evaluation.error.integer.expected=Integer 値が必要です
evaluation.error.boolean.expected=Boolean 値が必要です
status.invalid.breakpoint.out.of.class=ブレークポイントはどのクラスにも属していません
error.invalid.breakpoint.source.changed=ソース コードが変更しました
error.invalid.breakpoint.source.not.found=The class {0}, found in the project classpath, has no associated source files
status.paused=一時中止
status.thread.monitor=MONITOR
status.thread.not.started=NOT_STARTED
status.thread.running=RUNNING
status.thread.sleeping=SLEEPING
status.thread.unknown=UNKNOWN
status.thread.wait=WAIT
status.thread.zombie=ZOMBIE
status.thread.undefined=UNDEFINED
string.debugger.runner.description=選択した設定のデバッグ
debugger.runner.start.action.text=デバッグ(&D)
progress.hotswap.scanning.path=検索しています \: {0}
progress.hotswap.scanning.classes=再読み込みするクラスを検索しています...
progress.hotswap.reloading=クラスを再読み込みしています...
warning.hotswap.ignored.breakpoints=ブレークポイントは、以前のバージョンのメソッドでは無視されます
error.operation.canceled=操作をキャンセルしました
error.operation.not.supported.by.vm=操作は VM でサポートされていません
error.class.def.not.found=クラス定義がありません \: {0}
error.verification.error=検証エラー \: {0}
error.unsupported.class.version=サポートされないクラスのバージョン \: {0}
error.class.format.error=クラス フォーマット エラー \: {0}
error.class.circularity.error=クラスの循環エラー \: {0}
error.exception.while.reloading=クラスの再読み込み中の例外 \: {0} \: {1}
status.hotswap.loaded.classes.up.to.date=読み込んだクラスは最新です。 再読み込み対象がありません
error.io.error=I/O エラー
status.classes.reloaded={0,number} {0,choice, 0\#classes|1\#class|2\#classes} reloaded
status.classes.not.all.versions.reloaded=For {0} of {1} {1,choice, 1\#class|2\#classes} not all versions were reloaded
error.cannot.create.void.value=void 値を作成できません
warning.range.too.big=指定した範囲は大きすぎます {0} に必要なリソースが大きすぎるため、要求された処理は実行できません。 続行してよろしいですか ?
title.range.too.big=範囲は大きすぎます
label.array.renderer.configurable.start.index=配列開始インデックス(&R)\:
label.array.renderer.configurable.end.index=終了インデックス(&D)\:
label.array.renderer.configurable.max.count1=配列要素の最大表示数(&M)\:
label.array.renderer.configurable.max.count2=個
base.renderer.configurable.display.name=データ ビュー
label.base.renderer.configurable.autoscroll=新規ローカル変数に自動スクロールする(&L)
label.base.renderer.configurable.show.synthetic.fields=合成フィールドを表示する(&Y)
label.base.renderer.configurable.show.val.fields.as.locals=$val fields as local &variables
label.base.renderer.configurable.sort.alphabetically=アルファベット順にソートする(&L)
label.base.renderer.configurable.autoTooltip=Auto &tooltips for values
label.base.renderer.configurable.autoTooltip.description=If disabled, use "{0}" to show/hide tooltips
label.base.renderer.configurable.hide.null.array.elements=NULL 配列要素を非表示にする(&N)
label.base.renderer.configurable.show.static.fields=静的フィールドを表示する(&S)
label.base.renderer.configurable.show.static.final.fields=static final フィールドを表示する(&F)
label.base.renderer.configurable.show.declared.type=Declared &type
label.base.renderer.configurable.show.fq.names=Fully &qualified names
label.base.renderer.configurable.show.object.id=Object &id
label.base.renderer.configurable.auto.expressions=Enable auto expressions in Variables view
label.base.renderer.configurable.alternate.view=コレクション クラスの代替ビュー(&C)
label.base.renderer.configurable.enable.tostring='toString()' オブジェクト ビューを有効にする(&O)\:
label.base.renderer.configurable.all.overridding='toString()' メソッドをオーバーライドするすべてのクラス
label.base.renderer.configurable.classes.from.list=リストからのクラス \:
label.compound.renderer.configurable.use.default.renderer=デフォルトのレンダラを使用する
label.compound.renderer.configurable.use.expression=次の式を使用する \:
label.compound.renderer.configurable.use.expression.list=式のリストを使用する \:
label.compound.renderer.configurable.apply.to=レンダラをタイプのオブジェクトに適用する(完全修飾名)\:
label.compound.renderer.configurable.when.rendering=ノードをレンダリングするとき
label.compound.renderer.configurable.when.expanding=ノードを展開するとき
label.compound.renderer.configurable.test.can.expand=ノードを展開できるかどうかをテストする(オプション)\:
title.compound.renderer.configurable.choose.renderer.reference.type=レンダラ参照タイプ
text.base.renderer.configurable.no.class.patterns=No class patterns configured
button.add=追加(&A)
button.remove=削除(&R)
button.move.up=上へ移動(&U)
button.move.down=下へ移動(&D)
label.compound.renderer.configurable.table.header.name=名前
label.compound.renderer.configurable.table.header.expression=式
debugger.launching.configurable.display.name=Launching
debugger.hotswap.configurable.display.name=HotSwap
debugger.stepping.configurable.display.name=Stepping
label.debugger.launching.configurable.hide.window=Hide debug &window on process termination
label.debugger.focusAppOnBreakpoint=Focus application on breakpoint
label.debugger.hotswap.configurable.hotswap.background=Reload classes in &background
label.debugger.hotswap.configurable.compile.before.hotswap=Make project before reloading classes
label.debugger.hotswap.configurable.enable.vm.hang.warning=Enable 'JVM will hang' warning
label.debugger.general.configurable.tooltips.delay=値ツールチップ表示の間隔(ミリ秒) (&D)\:
label.debugger.hotswap.configurable.reload.classes=Reload classes after compilation\:
label.debugger.hotswap.configurable.always=&Always
label.debugger.hotswap.configurable.never=&Never
label.debugger.hotswap.configurable.ask=As&k
label.debugger.general.configurable.group.launching=起動
label.debugger.launching.configurable.force.classic.vm=Force Class&ic VM for JDK 1.3.x and earlier
label.debugger.launching.configurable.disable.jit=Disable JIT
label.debugger.launching.configurable.debugger.transport=Transport\:
label.debugger.launching.configurable.socket=&Socket
label.debugger.launching.configurable.shmem=Shared &memory
label.debugger.general.configurable.skip.synthetic.methods=合成メソッドをスキップする(&P)
label.debugger.general.configurable.skip.constructors=コンストラクタをスキップする(&C)
label.debugger.general.configurable.skip.classloaders=Skip class l&oaders
label.debugger.general.configurable.skip.simple.getters=シンプルな getter はスキップする(&G)
label.debugger.general.configurable.step.filters.list.header=クラスにステップ インしない(&I)
label.threads.view.configurable.show.source.file.name=ソース ファイル名の表示
label.threads.view.configurable.show.class.name=クラス名の表示
label.threads.view.configurable.show.line.number=行番号を表示する(&L)
label.threads.view.configurable.current.thread.on.top=現在のスレッドを最上部に移動
label.threads.view.configurable.show.stack.frames.for.synthetic.methods=合成メソッドのスタック フレームを表示する(&F)
label.threads.view.configurable.show.thread.groups=スレッド グループを表示する(&G)
threads.view.configurable.display.name=スレッド ビューのカスタマイズ
user.renderers.configurable.display.name=タイプ レンダラ
label.user.renderers.configurable.renderer.name=レンダラ名 \:
text.user.renderers.configurable.no.renderers=No renderers
button.copy=コピー
user.renderers.configurable.button.description.add=新規レンダラの追加
user.renderers.configurable.button.description.remove=選択したレンダラの削除
user.renderers.configurable.button.description.copy=選択したレンダラのコピー
user.renderers.configurable.button.description.move.up=レンダラを上に移動
user.renderers.configurable.button.description.move.down=レンダラを下に移動
label.complete.input.dialog.expression=式の入力
debugger.session.tab.threads.title=スレッド
debugger.session.tab.log.content.name=ログ \: {0}
debugger.session.tab.watches.title.with.size=ウォッチ({0})
button.close.no.mnemonic=閉じる
button.evaluate=評価
threads.export.dialog.title=スレッドのエクスポート
button.save=保存
label.threads.export.dialog.file=ファイルにエクスポート \:
error.threads.export.dialog.file.is.directory=指定したファイルはディレクトリです。\n正しいファイル名を指定してください。
error.threads.export.dialog.file.already.exists=ファイル\n\\''{0}''\nは、既に存在します。 上書きしますか ?
threads.export.attribute.label.daemon=DAEMON
threads.export.attribute.label.group=グループ ''{0}''
threads.export.attribute.label.status=ステータス \: ''{0}''
threads.export.attribute.label.priority=優先度\={0}
threads.export.attribute.label.tid=tid\=0x{0}
threads.export.attribute.label.nid=nid\={0}
threads.export.attribute.label.blocks.thread=ブロック {0}
threads.export.attribute.label.waiting.for.thread={0} を待機
threads.export.attribute.label.locked=locked {0}
threads.export.attribute.label.object-id=<0x{0}> (a {1})
threads.export.attribute.error.incompatible.state=互換のないスレッド状態
export.dialog.copy.action.description=テキストをクリップボードにコピー(&C)
evaluate.expression.dialog.title=式評価
label.evaluate.dialog.language=言語 \:
label.evaluate.dialog.expression=式(&E)\:
label.evaluate.dialog.result=結果(&R)\:
action.evaluate.expression.dialog.switch.mode.description=コード フラグメント モード
label.generic.debugger.parameters.patcher.configurable.shmem=共有メモリ(&M)
label.generic.debugger.parameters.patcher.configurable.socket=ソケット(&S)
button.debugger.settings=デバッガ設定...
label.generic.debugger.parameters.patcher.configurable.transport=トランスポート \:
label.generic.debugger.parameters.patcher.configurable.shmem.address=共有メモリ アドレス \:
get.jpda.dialog.title=JPDA ライブラリがありません
label.get.jpda.dialog.prompt=JPDA ライブラリを入手するには次を参照してください
label.get.jpda.dialog.error.description=デバッガを開始できません \: デバッグ ライブラリが JDK ホームにありません
progress.hot.swap.title=ホット スワップ
status.hot.swap.completed.with.errors=ホット スワップはエラーで終了しました
status.hot.swap.completed.with.warnings=ホット スワップは警告で終了しました
label.generic.debugger.parameters.patcher.configurable.port=ポート \:
status.hotswap.uptodate=読み込んだクラスは最新です。 再読み込み対象がありません
add.instance.filter.dialog.title=インスタンス フィルタの追加
add.instance.filter.dialog.prompt=インスタンス ID の入力 \:
add.instance.filter.dialog.error.numeric.value.expected=インスタンス ID は 'long' 型の数値です
position.highlighter.stripe.tooltip=実行ライン
hotswap.dialog.title.with.session={0} の変更したクラスの再読み込み
hotswap.dialog.title=変更したクラスの再読み込み
hotswap.dialog.run.prompt=いくつかのクラスは変更されています 変更したクラスを再読み込みしますか ?
hotswap.dialog.hang.warning=JVM is currently suspended.\nReloading classes with active third-party JVM agents may cause the JVM to hang.
hotswap.dialog.hang.question=Would you like to reload changed classes anyway?
evaluate.statement.dialog.title=コード フラグメント評価
label.evaluation.dialog.statements=評価するステートメント(&E)\:
action.evaluate.statement.dialog.switch.mode.description=式モード
label.add.field.breakpoint.dialog.fq.name=クラスの完全修飾名
label.add.field.breakpoint.dialog.field.name=フィールド名 \:
add.field.breakpoint.dialog.title=フィールドのウォッチポイントを追加
add.field.breakpoint.dialog.classchooser.title=フィールドのクラスを選択
add.field.breakpoint.dialog.field.chooser.title={0,choice, 0\#Class has no fields|1\#Select Field}
breakpoint.any.exception.display.name=任意の例外
breakpoint.log.message="reached {0}"
action.enable.text=有効
action.disable.text=無効
breakpoint.manager.action.view.breakpoints.text=プロパティ
action.remove.text=削除
value.none=<なし>
breakpoint.table.header.column.enabled=有効
breakpoint.table.header.column.name=名前
default.package.name=<デフォルト>
class.filters.dialog.title=クラス フィルタ
class.filters.dialog.inclusion.filters.group=クラス フィルタ
class.filters.dialog.exclusion.filters.group=クラス除外フィルタ
instance.filters.dialog.title=インスタンス フィルタ
instance.filters.dialog.instance.filters.group=インスタンス フィルタ
breakpoint.exception.breakpoint.display.name=例外ブレークポイント、クラス ''{0}''
exception.breakpoints.tab.title=例外ブレークポイント
field.watchpoints.tab.title=フィールド ウォッチポイント
line.breakpoints.tab.title=行ブレークポイント
method.breakpoints.tab.title=メソッド ブレークポイント
title.error.evaluating.breakpoint.condition=ブレークポイント条件エラー
title.error.evaluating.breakpoint.action=ブレークポイント動作エラー
error.evaluating.breakpoint.condition.or.action=VM イベント処理中の問題 \:\nブレークポイント \: ''{0}''\nエラー \: {1}\nブレークポイントで中断しますか ?
error.unable.to.evaluate.expression=式を評価できません
breakpoint.properties.panel.option.pass.count=パス カウント(&P)\:
breakpoint.properties.panel.option.class.filters=クラス フィルタ(&L)
breakpoint.properties.panel.option.instance.filters=インスタンス フィルタ(&I)
breakpoint.properties.panel.option.condition=条件(&N)\:
breakpoint.properties.panel.option.suspend.all=すべて
breakpoint.properties.panel.option.suspend.none=なし
breakpoint.properties.panel.option.suspend.thread=スレッド
breakpoint.properties.panel.option.log.expression=評価式のログ(&E)
breakpoint.properties.panel.option.depends.on=依存先 \:
breakpoint.properties.panel.option.log.message=コンソールへのログ メッセージ(&M)
breakpoint.warning=Warning \: {0}
breakpoint.property.name.suspend.policy=サスペンド
breakpoint.property.name.log.message=メッセージのログ
breakpoint.property.name.log.expression=式のログ
breakpoint.property.name.condition=条件
breakpoint.property.name.pass.count=パス カウント
breakpoint.property.name.class.filters=クラス フィルタ
breakpoint.property.name.instance.filters=インスタンス フィルタ \:
breakpoint.tooltip.text=行 {0} のブレークポイント
error.absent.exception.breakpoint.class.name=例外ブレークポイントのクラス名がありません
exception.breakpoint.console.message.with.thread.info=例外 ''{0}'' がスレッド ''{1}'' で発生しました
exception.breakpoint.console.message=例外 ''{0}'' が発生しました
add.exception.breakpoint.classchooser.title=例外クラスの入力
label.exception.breakpoint.properties.panel.caught.exception=捕捉した例外(&N)
label.exception.breakpoint.properties.panel.uncaught.exception=未捕捉の例外(&O)
label.exception.breakpoint.properties.panel.group.notifications=通知
error.invalid.breakpoint.missing.field.in.class=クラス ''{1}'' にフィールド ''{0}'' がありません
status.breakpoint.invalid=無効
error.field.breakpoint.class.name.not.specified=ウォッチポイントを追加できません \: クラス名の指定がありません
error.field.breakpoint.field.name.not.specified=ウォッチポイントを追加できません \: フィールド名の指定がありません
error.field.breakpoint.field.not.found=''{0}.{1}'' のフィールド ウォッチポイントを作成できません。\nフィールド ''{2}'' がありません
error.field.breakpoint.class.sources.not.found=''{0}.{1}'' のフィールド ウォッチポイントを作成できません。\nクラス ''{2}'' にソースがありません
label.filed.breakpoint.properties.panel.field.access=フィールド アクセス(&S)
label.filed.breakpoint.properties.panel.field.modification=フィールド変更(&M)
label.group.watch.events=ウォッチ
error.failed.evaluating.breakpoint.condition=ブレークポイント条件の評価に失敗しました。\n''{0}''\n原因 \: {1}
error.invalid.breakpoint.no.executable.code=実行コードがクラス {1} の行 {0} にありません
error.invalid.breakpoint.bad.line.number=行番号が無効です
line.breakpoint.display.name=行 {0}
line.breakpoint.display.name.with.class.or.method={1} の行 {0}
error.invalid.breakpoint.method.not.found=メソッドがクラス {0} にありません
label.method.breakpoint.properties.panel.method.entry=メソッド開始(&Y)
label.method.breakpoint.properties.panel.method.exit=メソッド終了(&X)
button.switch.view=ビューの切り替え(&W)
button.list.view=リスト ビュー
button.tree.view=ツリー ビュー
button.flatten.packages=パッケージをフラット表示する(&F)
button.group.by.classes=クラス単位でグループ化する(&A)
button.group.by.methods=メソッド単位でグループ化する(&T)
error.cannot.build.node.children.object.collected=子孫を評価できません。オブジェクトを収集しました。 {0}
error.invalid.field.name=無効なフィールド名 ''{0}''
label.unknown.value=<不明>
message.node.debug.info.not.available=デバッグ情報は利用できません
message.node.local.variables.debug.info.not.available=ローカル変数デバッグ情報は利用できません
message.node.all.array.elements.null=可視範囲のすべての要素は NULL です
message.node.all.elements.null=すべての要素は NULL です
message.node.empty.array=なし
message.node.class.has.no.fields=クラスにはフィールドがありません
message.node.object.collected=オブジェクトは、メソッド呼び出し中にガベージ コレクトされています
message.node.thread.running=スレッドが実行中です
message.node.thread.has.no.frames=スレッドにはフレームがありません
message.node.evaluation.not.possible=Target VM is not paused by breakpoint request. Evaluation of methods is not possible in this mode
label.thread.node.thread.collected=スレッド ''{0}'' はガベージ コレクトされています
label.thread.node=Thread "{0}"@{1} status\: {2}
label.thread.node.in.group=Thread "{0}"@{1} in group "{3}" status\: {2}
label.thread.group.node.group.collected=Thread Group "{0}" has been garbage-collected
label.thread.group.node=Thread Group "{0}"@{1}
evaluation.error.objref.expected={0} の代わりにオブジェクト参照が必要です
evaluation.error.invalid.type.name=無効なタイプ名 \: ''{0}''
label.undefined=未定義
label.node.descendands.expression=ノード子孫の式(&D)\:
node.has.descendands.expression.optional='ノードは子孫を持つ' の式 (オプション) (&H)\:
label.class.label.expression.configurable.node.label=ノード ラベルの式
label.named.children.configurable.node.descendants=ノード子孫(&S)\:
label.named.children.configurable.table.header.column.name=名前
label.named.children.configurable.table.header.column.expression=式
error.running.to.cursor.no.executable.code=実行コードは {0} にありません \:{1}
evaluation.error.local.variable.declarations.not.supported=ローカル変数宣言は、ここではサポートされません。
evaluation.error.unsupported.declaration=無効な宣言 \: {0} ローカル変数宣言のみがサポートされます。
error.jdk.not.specified=JDK が指定されていません
error.unsupported.jdk.version=デバッグは JDK {0} でサポートされていません
error.invalid.jdk.home=無効な JDK ホーム ディレクトリが指定されました。{0}
error.debug.libraries.missing=デバッグ ライブラリが JDK ホームにありません。\nデバッガを開始するには、ライブラリをインストールする必要があります。\n次を参照してください。http\://java.sun.com/products/jpda
error.field.not.found.in.class=そのようなフィールド {0} は {1} にありません
error.breakpoint.file.not.found=ファイル ''{0}'' がありません。このファイルのブレークポイントは無視されます
error.cannot.load.breakpoint.file=ファイル ''{0}'' を読み込めません。このファイルのブレークポイントは無視されます
evaluation.error.invalid.this.expression=''{0}'' を ''{1}'' に ''this'' として代替できません
error.invalid.type.name=無効なタイプ名 ''{0}''
error.cannot.create.expression.from.code.fragment=式をコード フラグメントから作成できません。
error.invalid.local.variable.name=無効なローカル変数名 ''{0}''
error.inconsistent.debug.info=矛盾したデバッグ情報
error.invalid.stackframe=内部例外 - 無効なスタックフレーム
label.breakpoint.properties.panel.group.conditions=Filters
label.breakpoint.properties.panel.group.actions=Actions
label.breakpoint.properties.panel.group.suspend.policy=Suspend policy
active.tooltip.title=Evaluation of {0}
active.tooltip.suggestion=Click here to view object tree
error.text.invalid.port.0=Invalid port\: ''{0}''
error.cannot.invoke.method.in.collected.thread=Cannot invoke method\: the invocation thread has been collected
title.smart.step.popup=Method to Step Into
action.show.watches.description=Shows or hides 'watches' pane
action.show.watches.text.hide=Hide Watches
action.show.watches.text.show=Show Watches
action.watch.method.return.value.description=Enables watching last executed method return value
action.watches.method.return.value.enable=Watch method return values
action.watches.method.return.value.disable=Stop watching method return values
action.watches.method.return.value.unavailable.reason=Feature is not supported by the target VM
action.maximizeContent.text=
breakpoint.properties.panel.option.depends.disable.again=Disable again
breakpoint.properties.panel.option.depends.leave.enabled=Leave enabled
breakpoint.properties.panel.option.dependency.type.lable=After breakpoint was hit\:
watchs.add.text=Add to watches
breakpoint.properties.panel.option.suspend.default=Make De&fault
frame.panel.frames.not.available=Frames not available for unsuspended thread
error.corrupt.debug.info=Debug info might be corrupt\: {0}
action.kill.process.text=Kill Process
action.kill.process.description=Forcibly terminate debugged application
evaluation.error.unknown.method.return.type=Cannot resolve method return type\: {0}
