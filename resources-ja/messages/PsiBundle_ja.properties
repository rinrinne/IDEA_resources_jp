psi.scanning.files.progress=ファイルをスキャンしています...
psi.scanning.files.in.folder.progress={0} でファイルをスキャンしています...
psi.decompiled.text.header=\
  // IntelliJ API Decompiler stub source generated from a class file\n\
  // Implementation of methods is not available
psi.error.incorroect.class.template.message={0} を作成できません - {1} テンプレートが正しくありません。
psi.search.inheritors.of.class.progress={0} の継承を検索しています...
psi.search.inheritors.progress=継承を検索しています...
psi.search.for.word.progress={0} を検索しています...
psi.search.in.non.java.files.progress=非 java ファイルの使用箇所を分析しています...

psi.search.scope.project.and.libraries=プロジェクトとライブラリ
psi.search.scope.project=プロジェクト ファイル
psi.search.scope.production.files=プロジェクト製品ファイル
psi.search.scope.test.files=プロジェクト テスト ファイル
psi.search.scope.intersection={0} と {1} の交点
psi.search.scope.union={0} と {1} のユニオン

# {0} - file path, {1} - localized IOException message.
codestyle.cannot.save.scheme.file=コード スタイル スキーム {0} を保存できません。 {1}
codestyle.export.display.name=コード スタイル スキーム
codestyle.cannot.save.settings.directory.cant.be.created.message=コード スタイル スキームを保存できません。 ディレクトリ {0} は作成できません。
codestyle.cannot.save.settings.directory.cant.be.created.title=設定を保存できません

el.identifier.expected=識別子が必要です
el.expression.expected=式が必要です
el.rbracket.expected=] が必要です
el.unexpected.end.of.file=不要な EOF です
el.lparen.expected=( が必要です
el.rparen.expected=) が必要です
el.colon.expected=\: が必要です
el.value.expected=値が必要です
el.cannot.resolve.function=関数を解決できません
el.cannot.resolve.namespace=名前空間を解決できません
el.cannot.resolve.property=プロパティを解決できません (ダイナミック プロパティ ?)
el.cannot.resolve.method=Cannot resolve method ''{0}''() \#loc
el.mismatched.parameters.count=Different number of formal and actual parameters
el.declare.variable.intention.family=Declare Variable As External Data
el.declare.variable.via.usebean.intention.name=Declare external variable as <jsp\:useBean />
el.declare.variable.via.comment.annotation.intention.name=Declare external variable in comment annotation
el.cannot.resolve.variable=Cannot resolve variable ''{0}'' \#loc
jsf.el.out.of.attribute=JSF EL out of attribute \#loc
jsf.method.call.is.nonstd.extension=Method call is nonstandard extension \#loc

search.scope.unknown=<unknown scope>
search.scope.module=Module ''{0}''
search.scope.module.runtime=Module ''{0}'' runtime scope

anonymous.class.derived.display={0} から派生した匿名クラス
local.class.preposition=ローカル
anonymous.class.context.display={0} の匿名
enum.constant.context=Enum constant ''{0}'' in ''{1}''
class.context.display={0} in {1}
method.context.display={0}() in {1}
aux.context.display=(in {0})
jsp.taglib.method.reference.error.class.is.not.valid=クラスが有効ではありません
jsp.taglib.method.reference.error.class.is.not.public=クラスがパブリックではありません
jsp.taglib.method.reference.error.no.such.method=そのメソッドはありません
jsp.taglib.method.reference.error.method.should.be.public.or.static=メソッドはパブリックまたは静的でなければなりません
jsp.taglib.method.reference.error.signature.is.different=シグネチャが異なります
jsp.taglib.method.reference.error.different.return.type=異なる戻り型
jsp.documentation.message.required=必要 \:&nbsp;{0}
jsp.documentation.message.can.have.runtime.value=ランタイム値 \:&nbsp;{0}
jsp.documentation.message.type=型 \:&nbsp;{0}
jsp.documentation.message.fragment=フラグメント \:&nbsp;{0}
jsp.documentation.message.custom.tag.name=カスタム タグ名
jsp.documentation.message.custom.function.name=Custom function name
jsp.documentation.message.custom.attribute.name=カスタム属性名
jsp.documentation.message.description=説明 \:&nbsp;{0}
jsp.documentation.message.example.of.use=使用&nbsp;の&nbsp;例 \:<br>{0}

#access levels
default.package.presentation=<デフォルト>
anonymous.class.display=匿名クラス
code.from.context.display={0} からのコード
code.display=コード
invalid.regular.expression.message=Invalid regular expression {0}
#psi reference provider options
qualified.resolve.class.reference.provider.option=Tells reference provider to process only qualified class references (e.g. not resolve String as java.lang.String)
default.path.evaluator.option=Tells reference provider how evaluate default path for given file
el.declare.variable.find.acceptable.class=Find acceptable class
0.is.not.an.identifier=''{0}'' is not an identifier.
cannot.modify.a.read.only.directory=Cannot modify a read-only directory ''{0}''.
cannot.modify.a.read.only.file=Cannot modify a read-only file ''{0}''.
cannot.delete.a.read.only.file=Cannot delete a read-only file ''{0}''.
0.expected={0} expected
cannot.resolve.symbol=Cannot resolve symbol ''{0}''

# suppress inspection "UnusedProperty"
packageLocal.visibility.presentation=package local
# suppress inspection "UnusedProperty"
protected.visibility.presentation=protected
# suppress inspection "UnusedProperty"
private.visibility.presentation=private
# suppress inspection "UnusedProperty"
public.visibility.presentation=public
# suppress inspection "UnusedProperty"
abstract.visibility.presentation=abstract
# suppress inspection "UnusedProperty"
static.visibility.presentation=static
# suppress inspection "UnusedProperty"
final.visibility.presentation=final
# suppress inspection "UnusedProperty"
native.visibility.presentation=native
# suppress inspection "UnusedProperty"
synchronized.visibility.presentation=synchronized
# suppress inspection "UnusedProperty"
strictfp.visibility.presentation=strictfp
# suppress inspection "UnusedProperty"
transient.visibility.presentation=transient
# suppress inspection "UnusedProperty"
volatile.visibility.presentation=volatile
# suppress inspection "UnusedProperty"
default.visibility.presentation=default
