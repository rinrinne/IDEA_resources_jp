method.is.implemented.too.many=実装を保持しています
method.is.overridden.too.many=サブクラスにオーバーライドされます
interface.is.implemented.too.many=実装を保持しています
class.is.subclassed.too.many=サブクラスを保持します

method.implements=メソッドを {1} に実装します
method.implements.in=Implements method ''{0}'' in ''{1}''

method.overrides=メソッドを {1} にオーバーライドします
method.overrides.in=Overrides method ''{0}'' in ''{1}''

analysis.hasnot.been.run=No analysis has been performed

no.syntax.highlighting.performed=構文強調表示は実行されませんでした。
no.inspections.performed=検査は実行されませんでした。

# These two aren't unused!
# suppress inspection "UnusedProperty"
no.syntax.highlighting.performed.for={0} の構文協調表示は実行されませんでした。
# suppress inspection "UnusedProperty"
no.inspections.performed.for=検査は {0} を実行しませんでした。

pass.syntax=構文修正を解析しています。
pass.inspection=コード検査を実行しています。
pass.wolf=Checking red files
pass.whole.inspections=Slow Inspections
analysis.completed=解析が終了しました。

no.errors.or.warnings.found=エラーまたは警告はありません。
no.errors.or.warnings.found.so.far=現在のところエラーまたは警告はありません。
errors.found.so.far=<b>{0}</b> {1} found so far
errors.found=<b>{0}</b> {1} found

error.highlighting.settings=エラー強調表示設定
method.is.implemented.header=は次に実装されました。<br>
method.is.overriden.header=は次にオーバーライドされました。<br>
interface.is.implemented.by.header=は次によって実装されました。<br>
class.is.subclassed.by.header=は次によってサブクラス化されました。<br>

navigation.title.super.method={0} のスーパー メソッドの選択
navigation.findUsages.title.super.method=Super Methods of {0}
navigation.title.implementation.method={0} の実装を選択してください
navigation.title.overrider.method={0} のオーバーライド メソッドを選択してください
navigation.title.subclass={0} のサブクラスを選択してください
performing.code.analysis=Performing code analysis
inspection.extended.description=more...
inspection.collapse.description=less...

import.popup.text={0}?
import.popup.multiple={0}? (multiple choices...)
